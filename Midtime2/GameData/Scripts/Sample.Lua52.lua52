

--サウンド読み込み
BGM = MMedia.CreateSound("UCL-GameBGM"); --BGM読み込み
MMedia.PlayLoop(BGM); --BGM再生。1度だけ開始すればいいため、ループ内に入れてはいけない。

--画像読み込み
BG = MImage.CreateImage("GameBG"); --背景画像
MousePointer = MImage.CreateImage("MousePointer"); --マウス追従テストの画像

CharStop = MImage.CreateAnime("UCL-UC-Stop", 3, 6, true); --停止中の画像。アニメ
CharMove = MImage.CreateAnime("UCL-UC-Move", 2, 6, true); --移動中の画像。アニメ
CharJump = MImage.CreateImage("UCL-UC-Jump"); --ジャンプ中の画像。静止画

			--ヘルプテキスト表示（文字の表示）
MImage.SetTextColor(0, 0, 0); --黒色
MImage.SetTextSize(16); --16pt
HelpText = MImage.CreateText("←→ = 移動、Aボタン (Zキー) = ジャンプ、Bボタン（Xキー） = メニューへ戻る");
MImage.SetPosition(HelpText,160, 505);

--変数の準備
CharX = 20;	--キャラクターの初期位置X
CharY = 440;	 --キャラクターの初期位置Y

LastMoveIsBackward = false; --後ろに移動したときはtrue、前に移動したときはfalse。
NowMoving = false; --キャラが移動中はtrue、停止中はfalse。
while(MCore.LoopFPS(30)) do --30FPSのゲームループ

	--●●● 初期化 ●●●
	NowMoving = false; --停止状態に戻す。

	--●●● 入力 ●●●
	if (MInput.GetButton(1, "B")) then --戻る
		MCore.Goto("Startup");
	end
	if (MInput.GetButton(1, "Left")) then --左ボタン
		CharX = CharX - 6; --左へ6ピクセル移動
		LastMoveIsBackward = true; --後ろ向き
		NowMoving = true; --移動中
	end
	if (MInput.GetButton(1, "Right")) then --右ボタン
		CharX = CharX + 6; --右へ6ピクセル移動
		LastMoveIsBackward = false; --前向き
		NowMoving = true; --移動中
	end
	if (MInput.GetButton(1, "A")) then --Aボタン: ジャンプ
		CharY = CharY - 6; --上へ6ピクセル移動
	else
		CharY = CharY + 6; --重力: 下へ6ピクセル移動。
	end



	--●●● 計算 ●●●
	--キャラ位置の制限
	if (CharX <= 0) then
		CharX = 0;
	end
	if (CharX >= 920) then
		CharX = 920;
	end
	if (CharY <= 0) then
		CharY = 0;
	end
	if (CharY >= 440) then
		CharY = 440;
	end



	--●●● 表示 ●●●
	--背景表示。スクリプトの指示の順で描かれるので、奥から手前に向かって指示を出していく。
	--背景は一番奥なので最初。
	MImage.Draw(BG);

	--キャラ表示
	if ( CharY == 440) then --地上にいる
		if (NowMoving) then
			MImage.InvertHorizontal(CharMove, LastMoveIsBackward ); --最後の移動が後ろ向きなら画像も反転。
			MImage.SetPosition(CharMove, CharX, CharY); --計算したキャラ位置を実際に反映
			MImage.Draw(CharMove); --移動中の画像表示
		else
			MImage.InvertHorizontal(CharStop, LastMoveIsBackward ); --最後の移動が後ろ向きなら画像も反転。
			MImage.SetPosition(CharStop, CharX, CharY); --計算したキャラ位置を実際に反映
			MImage.Draw(CharStop); --停止中の画像表示
		end
	else --上空にいる
		MImage.InvertHorizontal(CharJump, LastMoveIsBackward ); --最後の移動が後ろ向きなら画像も反転。
		MImage.SetPosition(CharJump, CharX, CharY); --計算したキャラ位置を実際に反映
		MImage.Draw(CharJump); --ジャンプ中の画像表示
	end

	--マウスポインタ表示。 最後に書いているのでもっとも手前であることと、マウス追従のテスト。
	MImage.Rotate(MousePointer, -3); --左に3°回転。
	MImage.SetPosition(MousePointer, MInput.GetMouse("X"), MInput.GetMouse("Y") ); --現在の位置をマウスカーソルの位置へ。
	MImage.Draw(MousePointer); --表示

	--ヘルプテキスト表示
	MImage.Draw(HelpText);

end
